#! /bin/sed -Ef

# canonicalize_yang_decimal - canonicalize YANG decimal literals
# Copyright (C) 2018  Erik Auerswald <auerswal@unix-ag.uni-kl.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Turn decimal number literals into the canonical format for YANG decimal64
# numbers as defined in RFC 7950, section 9.3.2. "Canonical Form:"
#
#   The canonical form of a positive decimal64 value does not include the
#   sign "+".  The decimal point is required.  Leading and trailing zeros
#   are prohibited, subject to the rule that there MUST be at least one
#   digit before and after the decimal point.  The value zero is
#   represented as "0.0".
#
# Please note that the script does not check if the decimal number is
# actually representable as a YANG decimal64.
#
# This script canonicalizes every number literal in the input stream,
# number literals can be adjunct to non-numbers, e.g., text.

# add missing decimal point to integers
: adp
s/(^|[^-+.[:digit:]])([-+[:digit:]][[:digit:]]*)([^-+.[:digit:]]|$)/\1\2.0\3/
t adp
# add missing zero before decimal point
s/(^|[^[:digit:]])\./\10./g
# add missing zero after decimal point
s/\.([^[:digit:]]|$)/.0\1/g
# remove leading plus sign
s/\+([[:digit:]]+\.[[:digit:]]+)/\1/g
# canonicalize the number zero
## squeeze leading zeros
: czlz
s/(^|[^[:digit:]])-?0+0\./\10./
t czlz
## squeeze trailing zeros
: cztz
s/\.00+([^[:digit:]]|$)/.0\1/
t cztz
## negative zero == positive zero
: nnz
s/-0\.0([^[[:digit:]]|$)/0.0\1/
t nnz
# remove leading zeros
: rlz
s/(^|[^[:digit:]])0+([1-9][[:digit:]]*\.)/\1\2/
t rlz
# remove trailing zeros
: rtz
s/(\.[[:digit:]]*[1-9])0+([^[:digit:]]|$)/\1\2/
t rtz
